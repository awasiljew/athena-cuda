#ifndef DEFINITIONS_H
#define DEFINITIONS_H 
/*  
 *  WARNING! This file has been automatically generated by configure.
 *  Any changes to it will be overwritten the next time configure is run.
 */
/*==============================================================================
 * FILE: defs.h.in
 *
 * PURPOSE: Template file for defs.h.  When 'configure' is run, a new defs.h
 *   file will be created (overwriting the last) from this template in which
 *   various cpp macros are defined selected from the options available here.  
 *
 * TO BY-PASS CONFIGURE: copy this file into defs.h, and edit the cpp macros
 *   by hand.
 *============================================================================*/

/*----------------------------------------------------------------------------*/
/*  macros which define physics and algorithm
 *  (user modified via configure) */

/* Version identifier when configure was last run */
#define CONFIGURE_DATE "Mon Nov 23 00:56:33 CET 2009"

/* Problem generator with which Athena is compiled */
#define A_PROBLEM "field_loop"

/* HYDRO or MHD */
#define MHD

/* ADIABATIC or ISOTHERMAL */
#define ADIABATIC

/* Number of passively advected scalars */
#define NSCALARS 0

/* Self-gravity */
#define NO_SELF_GRAVITY
#define SELF_GRAVITY_NONE

/* order of spatial reconstruction: FIRST_ORDER, SECOND_ORDER, THIRD_ORDER
 * THIRD_ORDER_EXTREMA_PRESERVING */
#define SECOND_ORDER

/* flux_{roe, hlle, hllc, hlld, force, exact} */
#define ROE_FLUX
#define GET_FLUXES flux_roe
#define FLUX_TYPE "roe"

/* integrate_3d_{vl, ctu} */
#define THREED_CTU
#define THREE_D_INTEGRATOR integrate_3d_ctu
#define UNSPLIT_INTEGRATOR "ctu"

/* Real: DOUBLE_PREC or SINGLE_PREC */
#define DOUBLE_PREC

/* debug mode: DEBUG or OPTIMIZE */
#define OPTIMIZE

/* Write ghost cells in outputs: WRITE_GHOST_CELLS or NO_WRITE_GHOST_CELLS */
#define NO_WRITE_GHOST_CELLS

/* MPI parallelism: MPI_PARALLEL or MPI_SERIAL */
#define MPI_SERIAL

/* H-correction: H_CORRECTION or NO_H_CORRECTION */
#define NO_H_CORRECTION

/* FFT mode: FFT_ENABLED or NO_FFT */
#define NO_FFT

/*----------------------------------------------------------------------------*/
/* macros associated with numerical algorithm (rarely modified) */

/* nghost = Number of Ghost Cells 
 * num_digit = Number of digits in data dump file
 * MAXLEN = maximum line length in input parameter file
 */

enum {
  nghost = 4,
  num_digit = 4
};
#define MAXLEN 256

/*----------------------------------------------------------------------------*/
/* general purpose macros (never modified) */
#ifndef MIN
#define MIN(a,b) ( ((a) < (b)) ? (a) : (b) )
#endif
#ifndef MAX
#define MAX(a,b) ( ((a) > (b)) ? (a) : (b) )
#endif
#define SIGN(a) ( ((a) < 0.) ? -1. : 1. )
#define SQR(x) ( (x)*(x) )
#define STR(x) #x
#define SQRT2 1.4142135623730951
#define ONE_OVER_SQRT2 0.7071067811865475
#define PI       3.14159265358979323846
#define ONE_3RD  0.3333333333333333
#define TWO_3RDS 0.6666666666666667
#define TINY_NUMBER 1.0e-20
#define HUGE_NUMBER 1.0e+20

/*----------------------------------------------------------------------------*/
/* computed macros based on above choices (never modified) */

#ifdef ISOTHERMAL /* ISOTHERMAL EOS */
#ifdef HYDRO
 enum {NWAVE = 4, NVAR = 4 + NSCALARS};
#endif
#ifdef MHD
 enum {NWAVE = 6, NVAR = 7 + NSCALARS};
#endif
#else /* ADIABATIC or other EOS */
#ifdef HYDRO
 enum {NWAVE = 5, NVAR = 5 + NSCALARS};
#endif
#ifdef MHD
 enum {NWAVE = 7, NVAR = 8 + NSCALARS, PITCH = 7};
#endif
#endif /* ISOTHERMAL */

//Defines block size to GPU computations
#define BLOCK_SIZE 32

/*----------------------------------------------------------------------------*/

#ifdef MPI_PARALLEL
enum {boundary_cells_tag,
      sync_step_tag,
      output_tag,           /* useful for controlling output with MPI */
};
#endif /* MPI_PARALLEL */

#endif /* DEFINITIONS_H */
